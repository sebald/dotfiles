#-------------------------------#
#           Navigation          #
#-------------------------------#
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias ~="cd ~" # `cd` is probably faster to type though
alias -- -="cd -"


#-------------------------------#
#            Shortcuts          #
#-------------------------------#
alias d="cd ~/Dropbox"
alias dl="cd ~/Downloads"
alias p="cd ~/Projects"
alias g="git"
alias h="history"
alias j="jobs"

alias edit="code"
alias nc="npm-check"

alias y="yarn"
alias ys="yarn start"
alias yt="yarn test"
alias yd="yarn dev"
alias yr="yarn run"
alias yb="yarn run build"
alias yu="yarn upgrade-interactive"

# Detect which `ls` flavor is in use
if ls --color > /dev/null 2>&1; then # GNU `ls`
	colorflag="--color"
	export LS_COLORS='no=00:fi=00:di=01;31:ln=01;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.avi=01;35:*.fli=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.ogg=01;35:*.mp3=01;35:*.wav=01;35:'
else # macOS `ls`
	colorflag="-G"
	export LSCOLORS='BxBxhxDxfxhxhxhxhxcxcx'
fi

# List all files colorized in long format
alias l="ls -lF ${colorflag}"

# List all files colorized in long format, including dot files
alias la="ls -laF ${colorflag}"

# List only directories
alias lsd="ls -lF ${colorflag} | grep --color=never '^d'"

# Always use color output for `ls`
alias ls="command ls ${colorflag}"


#-------------------------------#
#               Git             #
#-------------------------------#
alias gc="git commit"
alias gco="git checkout"
alias gcap="git commit --amend && git push origin HEAD --force-with-lease"

alias gs="git s"

function git_prune () {
  git fetch -p && for branch in `git branch -vv --no-color | grep ': gone]' | awk '{print $1}'`; do git branch -D $branch; done
}
alias gc="git clean -f"

alias gl="git log --graph --pretty=oneline --abbrev-commit"
alias gg="git log --graph --pretty=format:'%C(bold)%h%Creset%C(magenta)%d%Creset %s %C(yellow)<%an> %C(cyan)(%cr)%Creset' --abbrev-commit --date=relative"
alias ggs="gg --stat"
alias gsl="git shortlog -sn"
alias gwc="git whatchanged"
alias glog="git --no-pager log --pretty=oneline --decorate"

# List files with conflicts
alias gdiff="git diff --name-only --diff-filter=U"

# Squash commits on current branch and create one commit
function smoosh () {
  if [ -n "$(git status --porcelain)" ]; then
    echo "Your git status is not clean. Aborting.";
    exit 1;
  fi

 git reset --soft HEAD~$(git rev-list --count HEAD ^"${1:-master}")
 git add -A
 git commit
 git push --force-with-lease
}

#-------------------------------#
#              Docker           #
#-------------------------------#
function docker-stop () {
  if [[ $(docker ps -a -q) ]]; then
    docker rm $(docker ps -a -q)
    echo -e "\xf0\x9f\x93\xa6  ➡ \xf0\x9f\x92\xa5  All stoped containers removed!"
  else
    echo -e "\xf0\x9f\x91\x8c  Nothing to stop!"
  fi
}
function docker-none () {
  if [[ $(docker images | grep "^<none>" | awk "{print $3}") ]]; then
    docker rmi $(docker images | grep "^<none>" | awk "{print $3}")
    echo -e "\xf0\x9f\x96\xbc  ➡ \xf0\x9f\x92\xa5  Cleaned <none> images!"
  else
    echo -e "\xf0\x9f\x91\x8c  Nothing to clean!"
  fi
}
function docker-killall () {
  if [[ $(docker ps -q) ]]; then
    docker kill $(docker ps -q)
    echo -e "\xe2\x98\xa0  All active containers killed!"
  else
    echo -e "\xf0\x9f\x91\x8c  Nothing to kill!"
  fi
}
function docker-clean () {
  docker-stop
  docker-none
  echo -e "\xf0\x9f\x90\x8b \xf0\x9f\x90\x8b \xf0\x9f\x90\x8b  Done! \xf0\x9f\x90\x8b \xf0\x9f\x90\x8b \xf0\x9f\x90\x8b"
}
function docker-kc () {
  docker-killall
  docker-clean
}


#-------------------------------#
#            Utility            #
#-------------------------------#
# Always enable colored `grep` output
# Note: `GREP_OPTIONS="--color=auto"` is deprecated, hence the alias usage.
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

# Enable aliases to be sudo’ed
alias sudo='sudo '

# Get week number
alias week='date +%V'

# Stopwatch
alias timer='echo "Timer started. Stop with Ctrl-D." && date && time cat && date'

# IP addresses
alias ip="dig +short myip.opendns.com @resolver1.opendns.com"
alias localip="ipconfig getifaddr en0"
alias ips="ifconfig -a | grep -o 'inet6\? \(addr:\)\?\s\?\(\(\([0-9]\+\.\)\{3\}[0-9]\+\)\|[a-fA-F0-9:]\+\)' | awk '{ sub(/inet6? (addr:)? ?/, \"\"); print }'"

# Flush Directory Service cache
alias flush="dscacheutil -flushcache && killall -HUP mDNSResponder"

# View HTTP traffic
alias sniff="sudo ngrep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80'"
alias httpdump="sudo tcpdump -i en1 -n -s 0 -w - | grep -a -o -E \"Host\: .*|GET \/.*\""

# Canonical hex dump; some systems have this symlinked
command -v hd > /dev/null || alias hd="hexdump -C"

# OS X has no `md5sum`, so use `md5` as a fallback
command -v md5sum > /dev/null || alias md5sum="md5"

# OS X has no `sha1sum`, so use `shasum` as a fallback
command -v sha1sum > /dev/null || alias sha1sum="shasum"

# Trim new lines and copy to clipboard
alias c="tr -d '\n' | pbcopy"

# Recursively delete `.DS_Store` files
alias cleanup="find . -type f -name '*.DS_Store' -ls -delete"

# Empty the Trash on all mounted volumes and the main HDD.
# Also, clear Apple’s System Logs to improve shell startup speed.
# Finally, clear download history from quarantine. https://mths.be/bum
alias emptytrash="sudo rm -rfv /Volumes/*/.Trashes; sudo rm -rfv ~/.Trash; sudo rm -rfv /private/var/log/asl/*.asl; sqlite3 ~/Library/Preferences/com.apple.LaunchServices.QuarantineEventsV* 'delete from LSQuarantineEvent'"

# Show/hide hidden files in Finder
alias show="defaults write com.apple.finder AppleShowAllFiles -bool true && killall Finder"
alias hide="defaults write com.apple.finder AppleShowAllFiles -bool false && killall Finder"

# Hide/show all desktop icons (useful when presenting)
alias hidedesktop="defaults write com.apple.finder CreateDesktop -bool false && killall Finder"
alias showdesktop="defaults write com.apple.finder CreateDesktop -bool true && killall Finder"

# URL-encode strings
alias urlencode='python -c "import sys, urllib as ul; print ul.quote_plus(sys.argv[1]);"'

# Merge PDF files
# Usage: `mergepdf -o output.pdf input{1,2,3}.pdf`
alias mergepdf='/System/Library/Automator/Combine\ PDF\ Pages.action/Contents/Resources/join.py'


# Intuitive map function
# For example, to list all directories that contain a certain file:
# find . -name .gitattributes | map dirname
alias map="xargs -n1"

# Kill all the tabs in Chrome to free up memory
# [C] explained: http://www.commandlinefu.com/commands/view/402/exclude-grep-from-your-grepped-output-of-ps-alias-included-in-description
alias chromekill="ps ux | grep '[C]hrome Helper --type=renderer' | grep -v extension-process | tr -s ' ' | cut -d ' ' -f2 | xargs kill"

# Lock the screen (when going AFK)
alias afk="/System/Library/CoreServices/Menu\ Extras/User.menu/Contents/Resources/CGSession -suspend"

# Reload the shell (i.e. invoke as a login shell)
alias reload="exec $SHELL -l"

# Create dir and cd into it
function mkd () { mkdir -p "$@" && eval cd "\"\$$#\""; }

# Create a file and open it with default (edit alias) editor
function tf () { touch "$@" && eval edit "\"\$$#\""; }

# Toggle Proxy
function proxy () { sh ~/bin/proxy_toggle.sh "$@"; }

# Emoji -> HEX
function e2x () {
  echo -n $1 | hexdump
}
