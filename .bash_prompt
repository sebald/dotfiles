#!/usr/bin/env bash

# Heavily inspired by @necolas’s prompt: https://github.com/necolas/dotfiles

if [[ $COLORTERM = gnome-* && $TERM = xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then
  export TERM='gnome-256color';
elif infocmp xterm-256color >/dev/null 2>&1; then
  export TERM='xterm-256color';
fi;

# colors (https://npm.runkit.com/color2xterm)
bold=$(tput bold)
reset=$(tput sgr0)

green=$(tput setaf 114) # hex: 97c475
purple=$(tput setaf 176) # hex: c775df
yellow=$(tput setaf 222) # hex: d8bb7e
gray=$(tput setaf 102) # hex 7f848d


# stolen from: https://github.com/mathiasbynens/dotfiles
prompt_git() {
  local dirty=''
  local branchName=''

  # Check if the current directory is in a Git repository.
  if [ $(git rev-parse --is-inside-work-tree &>/dev/null; echo "${?}") == '0' ]; then

    # check if the current directory is in .git before running git checks
    if [ "$(git rev-parse --is-inside-git-dir 2> /dev/null)" == 'false' ]; then

      # Ensure the index is up to date.
      git update-index --really-refresh -q &>/dev/null;

      # Check for uncommitted changes in the index.
      if ! $(git diff --quiet --ignore-submodules --cached); then
        dirty='*';
      # Check for unstaged changes.
      elif ! $(git diff-files --quiet --ignore-submodules --); then
        dirty='*';
      # Check for untracked files.
      elif [ -n "$(git ls-files --others --exclude-standard)" ]; then
        dirty='*';
      fi;

    fi;

    # Get the short symbolic ref.
    # If HEAD isn’t a symbolic ref, get the short SHA for the latest commit
    # Otherwise, just give up.
    branchName="$(git symbolic-ref --quiet --short HEAD 2> /dev/null || \
      git rev-parse --short HEAD 2> /dev/null || \
      echo '(unknown)')";

    echo -e " ${1}${branchName}${2}${dirty}";

  else
    return;
  fi;
}


# set the terminal title and prompt.
PS1="\[\033]0;\w\007\]"
PS1+="\n" # newline
PS1+="\e[3m\[$green\]\w\e[0m" # working directory
PS1+="\$(prompt_git \"$gray\" \"$gray\")" # git repository details
PS1+="\n"
PS1+="\[$reset$purple\]${promptSymbol:-❯} \[$reset\]" # $ (and reset color)
export PS1;

PS2="\[${yellow}\]→ \[${reset}\]";
export PS2;